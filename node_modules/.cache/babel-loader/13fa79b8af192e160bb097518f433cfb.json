{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/facundo/Henry/InterviewAgilika/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport GuiInterface from \"./components/GuiInterface\";\nimport ModalSizeParking from \"./components/ModalSizeParking\";\nimport ParkedVehicles from \"./components/ParkedVehicles\";\nimport QueueVehicles from \"./components/QueueVehicles\";\n\nfunction App() {\n  _s();\n\n  const [freeSpaces, setFreeSpaces] = useState({\n    1: 5,\n    2: 5,\n    3: 5\n  });\n\n  const setParkingSize = input => {\n    setFreeSpaces(input);\n  };\n\n  const [vehicleParked, setVehicleParked] = useState([]);\n  const [vehicleQueue, setVehicleQueue] = useState([]);\n  const [id, setId] = useState(0);\n  const [modalShow, setModalShow] = useState(true);\n\n  const modalClose = () => {\n    setModalShow(false);\n  };\n\n  const addVehicle = e => {\n    if (vehicleQueue.length > 0) {\n      return setVehicleQueue([...vehicleQueue, e]), setId(id + 1);\n    }\n\n    while (e.parked < 4) {\n      if (freeSpaces[e.parked] > 0) {\n        if (e.queue) {\n          e.queue = false;\n          return setFreeSpaces({ ...freeSpaces,\n            [e.parked]: freeSpaces[e.parked] - 1\n          }), setVehicleParked([...vehicleParked, e]), setVehicleQueue(vehicleQueue.splice(1));\n        } else {\n          return setFreeSpaces({ ...freeSpaces,\n            [e.parked]: freeSpaces[e.parked] - 1\n          }), setVehicleParked([...vehicleParked, e]), setId(id + 1);\n        }\n      } else {\n        e.parked = e.parked + 1;\n        return addVehicle(e);\n      }\n    }\n\n    if (e.queue) {\n      e.parked = e.size;\n      return;\n    } else {\n      e.parked = e.size;\n      e.queue = true;\n      return setVehicleQueue([...vehicleQueue, e]), setId(id + 1);\n    }\n  };\n\n  const deleteVehicleParked = (vehicle, ind) => {\n    setFreeSpaces({ ...freeSpaces,\n      [vehicle.parked]: freeSpaces[vehicle.parked] + 1\n    });\n    setVehicleParked(vehicleParked.filter((e, index) => {\n      return index !== ind;\n    }));\n  };\n\n  const deleteVehicleQueue = ind => {\n    setVehicleQueue(vehicleQueue.filter((e, index) => {\n      return index !== ind;\n    }));\n  };\n\n  const uploadVehiclesQueue = () => {\n    if (vehicleQueue.length > 0) addVehicle(vehicleQueue[0]);\n  };\n\n  uploadVehiclesQueue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(ModalSizeParking, {\n      modalShow: modalShow,\n      modalClose: modalClose,\n      setParkingSize: setParkingSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row parking-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"GUI-interface col-2\",\n        children: /*#__PURE__*/_jsxDEV(GuiInterface, {\n          addVehicle: addVehicle,\n          id: id,\n          freeSpaces: freeSpaces\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"vehicles-parked col-lg-8\",\n        children: /*#__PURE__*/_jsxDEV(ParkedVehicles, {\n          vehicleParked: vehicleParked,\n          deleteVehicleParked: deleteVehicleParked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"parking-queue col-lg-2\",\n        children: /*#__PURE__*/_jsxDEV(QueueVehicles, {\n          vehicleQueue: vehicleQueue,\n          deleteVehicleQueue: deleteVehicleQueue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"nD+X1/m2INLtnMOaMrQvmsR2qRk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/facundo/Henry/InterviewAgilika/src/App.js"],"names":["useState","GuiInterface","ModalSizeParking","ParkedVehicles","QueueVehicles","App","freeSpaces","setFreeSpaces","setParkingSize","input","vehicleParked","setVehicleParked","vehicleQueue","setVehicleQueue","id","setId","modalShow","setModalShow","modalClose","addVehicle","e","length","parked","queue","splice","size","deleteVehicleParked","vehicle","ind","filter","index","deleteVehicleQueue","uploadVehiclesQueue"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport GuiInterface from \"./components/GuiInterface\";\nimport ModalSizeParking from \"./components/ModalSizeParking\";\nimport ParkedVehicles from \"./components/ParkedVehicles\";\nimport QueueVehicles from \"./components/QueueVehicles\";\n\nfunction App() {\n      const [freeSpaces, setFreeSpaces] = useState({\n            1: 5,\n            2: 5,\n            3: 5,\n      });\n\n      const setParkingSize = (input) => {\n            setFreeSpaces(\n                  input\n            )\n      }\n\n      const [vehicleParked, setVehicleParked] = useState([]);\n\n      const [vehicleQueue, setVehicleQueue] = useState([]);\n\n      const [id, setId] = useState(0);\n\n      const [modalShow, setModalShow] = useState(true);\n\n      const modalClose = () => {\n            setModalShow(false);\n      };\n\n      const addVehicle = (e) => {\n            if(vehicleQueue.length > 0){\n                  return setVehicleQueue([...vehicleQueue, e]), setId(id + 1);\n            }\n            while (e.parked < 4) {\n                  if (freeSpaces[e.parked] > 0) {\n                        if (e.queue) {\n                              e.queue = false;\n                              return (\n                                    setFreeSpaces({\n                                          ...freeSpaces,\n                                          [e.parked]: freeSpaces[e.parked] - 1,\n                                    }),\n                                    setVehicleParked([...vehicleParked, e]),\n                                    setVehicleQueue(vehicleQueue.splice(1))\n                              );\n                        } else {\n                              return (\n                                    setFreeSpaces({\n                                          ...freeSpaces,\n                                          [e.parked]: freeSpaces[e.parked] - 1,\n                                    }),\n                                    setVehicleParked([...vehicleParked, e]),\n                                    setId(id + 1)\n                              );\n                        }\n                  } else {\n                        e.parked = e.parked + 1;\n                        return addVehicle(e);\n                  }\n            }\n            if (e.queue) {\n                  e.parked = e.size;\n                  return;\n            } else {\n                  e.parked = e.size;\n                  e.queue = true;\n                  return setVehicleQueue([...vehicleQueue, e]), setId(id + 1);\n            }\n      };\n\n      const deleteVehicleParked = (vehicle, ind) => {\n            setFreeSpaces({\n                  ...freeSpaces,\n                  [vehicle.parked]: freeSpaces[vehicle.parked] + 1,\n            });\n            setVehicleParked(\n                  vehicleParked.filter((e, index) => {\n                        return index !== ind;\n                  })\n            );\n      };\n\n      const deleteVehicleQueue = (ind) => {\n            setVehicleQueue(\n                  vehicleQueue.filter((e, index) => {\n                        return index !== ind;\n                  })\n            );\n      };\n\n      const uploadVehiclesQueue = () => {\n            if (vehicleQueue.length > 0) addVehicle(vehicleQueue[0]);\n      };\n\n      uploadVehiclesQueue();\n\n      return (\n            <div className=\"App container-fluid\">\n                  <ModalSizeParking\n                        modalShow={modalShow}\n                        modalClose={modalClose}\n                        setParkingSize={setParkingSize}\n                  />\n                  <div className=\"row parking-container\">\n                        <section className=\"GUI-interface col-2\">\n                              <GuiInterface\n                                    addVehicle={addVehicle}\n                                    id={id}\n                                    freeSpaces={freeSpaces}\n                              />\n                        </section>\n                        <section className=\"vehicles-parked col-lg-8\">\n                              <ParkedVehicles\n                                    vehicleParked={vehicleParked}\n                                    deleteVehicleParked={deleteVehicleParked}\n                              />\n                        </section>\n                        <section className=\"parking-queue col-lg-2\">\n                              <QueueVehicles\n                                    vehicleQueue={vehicleQueue}\n                                    deleteVehicleQueue={deleteVehicleQueue}\n                              />\n                        </section>\n                  </div>\n            </div>\n      );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}